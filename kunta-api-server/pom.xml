<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>fi.otavanopisto.kunta-api</groupId>
  <artifactId>kunta-api-server</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>Kunta API</name>
  <description>Kunta API server</description>
  <url>https://github.com/otavanopisto/kunta-api</url>

  <licenses>
    <license>
      <name>GNU Affero General Public License v3</name>
      <url>http://www.gnu.org/licenses/agpl-3.0.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  
  <developers>
    <developer>
      <id>otavanopisto</id>
      <email>ratkaisutiimi@otavanopisto.fi</email>
      <name>Otavan Opisto</name>
      <organization>Otavan Opisto</organization>
      <organizationUrl>http://www.otavanopisto.fi/</organizationUrl>
      <roles>
        <role>Owner</role>
      </roles>
    </developer>
  </developers>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/otavanopisto/kunta-api/issues</url>
  </issueManagement>

  <scm>
    <developerConnection>scm:git:git@github.com:otavanopisto/kunta-api.git</developerConnection>
    <url>git@github.com:otavanopisto/kunta-api.git</url>
    <connection>scm:git:git@github.com:otavanopisto/kunta-api.git</connection>
    <tag>HEAD</tag>
  </scm>

  <organization>
    <name>Otava Folk High School</name>
    <url>http://www.otavanopisto.fi</url>
  </organization>

  <properties>
    <!-- Project -->

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Maven -->

    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    
    <!-- Wildfly -->
    
    <wildfly-spec-api.version>10.1.0.Final</wildfly-spec-api.version>
    
    <!-- Integrations -->
    
    <kunta-api-spec.version>0.0.15</kunta-api-spec.version>
    <ptv-rest-client.version>0.0.5</ptv-rest-client.version>
    <mwp-rest-client.version>0.0.3</mwp-rest-client.version>
    <mikkelinyt.rest-model.version>0.0.1</mikkelinyt.rest-model.version>
    
    <!-- Test -->
    
    <restassured.version>2.9.0</restassured.version> 
    <wiremock.version>2.1.11</wiremock.version>
    
  </properties>
  
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-spec-api</artifactId>
        <version>${wildfly-spec-api.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <sourceDirectory>src/main/java</sourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <archive>
            <manifestEntries>
              <Dependencies>org.apache.httpcomponents, org.infinispan, org.apache.commons.io, com.fasterxml.jackson.core.jackson-annotations, com.fasterxml.jackson.core.jackson-databind, com.fasterxml.jackson.datatype.jackson-datatype-jsr310</Dependencies>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.bsc.maven</groupId>
        <artifactId>maven-processor-plugin</artifactId>
        <executions>
          <execution>
            <id>process</id>
            <goals>
              <goal>process</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <processors>
                <processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor>
              </processors>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>        
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>5.0.7.Final</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>

  <dependencies>
  
    <dependency>
      <groupId>org.jboss.spec.javax.servlet</groupId>
      <artifactId>jboss-servlet-api_3.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>
  
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.ws.rs</groupId>
      <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson2-provider</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>fi.otavanopisto.mikkelinyt.mikkelinyt-rest-model</groupId>
      <artifactId>mikkelinyt-rest-model</artifactId>
      <version>${mikkelinyt.rest-model.version}</version>
    </dependency>
    
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>fi.otavanopisto.kunta-api</groupId>
      <artifactId>kunta-api-spec</artifactId>
      <version>${kunta-api-spec.version}</version>
    </dependency>
    
    <dependency>
      <groupId>fi.otavanopisto.ptv.rest-client</groupId>
      <artifactId>ptv-rest-client</artifactId>
      <version>${ptv-rest-client.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.datatype</groupId>
          <artifactId>jackson-datatype-jsr310</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>fi.otavanopisto.mwp.mwp-rest-client</groupId>
      <artifactId>mwp-rest-client</artifactId>
      <version>${mwp-rest-client.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.datatype</groupId>
          <artifactId>jackson-datatype-jsr310</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.1</version>
    </dependency>

    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jboss.spec.javax.interceptor</groupId>
      <artifactId>jboss-interceptors-api_1.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.4</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-infinispan</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-core</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-commons</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- Test -->
    
    <dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
      <version>${restassured.version}</version>
    </dependency> 
    
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock</artifactId>
      <version>${wiremock.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.7</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
  </dependencies>
  
  <profiles>
    
    <profile>
      <id>itests</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      
      <properties>
        <h2.version>1.4.192</h2.version>
        <it.port.http>58080</it.port.http>
        <it.host>api.kunta-api.test</it.host>
        <it.jdbc.driver>org.h2.Driver</it.jdbc.driver>
        <it.jdbc.url>jdbc:h2:file:${project.build.directory}/h2;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE</it.jdbc.url>
        <it.jdbc.jndi>java:/jboss/datasources/kuntaapi</it.jdbc.jndi>
        <it.jdbc.username>sa</it.jdbc.username>
        <it.jdbc.password>sa</it.jdbc.password>
        <it.hibernate.dialect>org.hibernate.dialect.H2Dialect</it.hibernate.dialect>
        <jacoco.reportPath>${project.basedir}/target/jacoco.exec</jacoco.reportPath>
      </properties>
      
      <dependencies>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <version>${h2.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.19.1</version>
            <configuration>
              <failIfNoTests>true</failIfNoTests>
              <includes>
                <include>**/*IT.java</include>
              </includes>
              <systemPropertyVariables>
                <java.util.logging.config.file>${project.basedir}/src/test/resources/logging.properties</java.util.logging.config.file>
                <jboss.home>${wildfly.home}</jboss.home>
                <module.path>${wildfly.home}/modules</module.path>
                <it.host>${it.host}</it.host>
                <it.port.http>${it.port.http}</it.port.http>
                <it.jdbc.driver>${it.jdbc.driver}</it.jdbc.driver>
                <it.jdbc.url>${it.jdbc.url}</it.jdbc.url>
                <it.jdbc.jndi>${it.jdbc.jndi}</it.jdbc.jndi>
                <it.jdbc.username>${it.jdbc.username}</it.jdbc.username>
                <it.jdbc.password>${it.jdbc.password}</it.jdbc.password>
              </systemPropertyVariables>
            </configuration>
            <executions>
              <execution>
                <id>integration-test</id>
                <goals>
                  <goal>integration-test</goal>
                </goals>
              </execution>
              <execution>
                <id>verify</id>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>de.juplo</groupId>
            <artifactId>hibernate-maven-plugin</artifactId>
            <version>2.0.0</version>
            <dependencies>
              <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <driver>${it.jdbc.driver}</driver>
              <hibernateDialect>${it.hibernate.dialect}</hibernateDialect> 
              <url><![CDATA[${it.jdbc.url}]]></url>
              <username>${it.jdbc.username}</username>
              <password>${it.jdbc.password}</password>
            </configuration>
            <executions>
              <execution> 
                <id>create-schema</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>create</goal>
                </goals>
                <configuration>
                  <type>CREATE</type>
                </configuration>
              </execution>
              
              <execution> 
                <id>drop-db-after-test</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>drop</goal>
                </goals>
                <configuration>
                  <type>DROP</type>
                  <force>true</force>
                  <skip>${it.skipdatabasedrop}</skip>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.7.6.201602180812</version>
            <configuration>
              <destFile>${jacoco.reportPath}</destFile>
              <dataFile>${jacoco.reportPath}</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
              <classDumpDir>${project.reporting.outputDirectory}/jacoco-it/classes</classDumpDir>
            </configuration>
                
            <executions>
              <execution>
                <id>jacoco-agent</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <destFile>${jacoco.reportPath}</destFile>
                  <propertyName>jacoco.agent.itArgLine</propertyName>
                </configuration>
              </execution>
              <execution>
                <id>jacoco-report</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>dump</goal>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <version>1.5.0</version>
            <configuration>
              <container>
                <containerId>wildfly10x</containerId>
                <log>${project.basedir}/target/cargo.log</log>
                <output>${project.basedir}/target/wildfly.log</output>
                <zipUrlInstaller>
                  <url>http://download.jboss.org/wildfly/10.1.0.Final/wildfly-10.1.0.Final.zip</url>
                  <downloadDir>${project.basedir}/.cargo/downloads</downloadDir>
                  <extractDir>${project.basedir}/.cargo/extracts</extractDir>
                </zipUrlInstaller>     
                <dependencies>
                  <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                  </dependency>
                </dependencies>         
              </container>
              <configuration>
                <properties>
                  <cargo.servlet.port>${it.port.http}</cargo.servlet.port>
                  <cargo.jboss.configuration>standalone</cargo.jboss.configuration>
                  <cargo.jvmargs>${jacoco.agent.itArgLine},output=tcpserver,port=6300 -Xms64m -Xmx1024m -Drunmode=TEST</cargo.jvmargs>
                  <cargo.datasource.datasource.fnici>
                    cargo.datasource.driver=${it.jdbc.driver}|
                    cargo.datasource.url=${it.jdbc.url}|
                    cargo.datasource.jndi=${it.jdbc.jndi}|
                    cargo.datasource.username=${it.jdbc.username}|
                    cargo.datasource.password=${it.jdbc.password}|
                    cargo.datasource.transactionsupport=LOCAL_TRANSACTION
                  </cargo.datasource.datasource.fnici>
                </properties>    
              </configuration>
              <deployer/>
            </configuration>
            <executions>
              <execution>
                <id>start-cargo</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-cargo</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
                <configuration>
                  <skip>${it.skipserverstop}</skip>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-maven-plugin</artifactId>
            <version>1.0.2.Final</version>
            <executions>
              <execution>
                <id>deploy</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>deploy</goal>
                </goals>
                <configuration>
                  <before-deployment>
                    <batch>true</batch>
                    <commands>
                      <command>/subsystem=infinispan/cache-container=kunta-api:add()</command>
                      <command>/subsystem=undertow/server=default-server/host=kunta-api:add(alias=["${it.host}"])</command>
                    </commands>
                  </before-deployment>
                  <filename>${project.build.finalName}.${project.packaging}</filename>
                </configuration>
              </execution>
            </executions>
          </plugin>
                    
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>wait-maven-plugin</artifactId>
            <version>1.0</version>
            <executions>
              <execution>
                <id>wait</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>wait</goal>
                </goals>      
                <configuration>
                  <protocol>http</protocol>
                  <host>${it.host}</host>
                  <port>${it.port.http}</port>
                  <file>/v1/system/ping</file>
                  <maxcount>20</maxcount>
                  <timeout>10000</timeout>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.eluder.coveralls</groupId>
            <artifactId>coveralls-maven-plugin</artifactId>
            <version>4.2.0</version>
          </plugin>
        </plugins>
      </build>
    </profile>
    
  </profiles>
  
</project>